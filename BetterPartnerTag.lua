--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v31=0;local v32;local v33;local v34;local v35;local v36;local v37;local v38;while true do if (v31==(3 -1)) then v36=nil;v37=nil;v31=3;end if (v31~=0) then else v32=0;v33=nil;v31=1;end if (v31~=(1418 -(1394 + 23))) then else v34=nil;v35=nil;v31=2;end if (v31==(185 -(62 + 120))) then v38=nil;while true do local v78=0;local v79;while true do if (v78==(0 + 0)) then v79=0;while true do if (1==v79) then if (v32==(2 + 0)) then local v112=0;while true do if (v112==0) then local v114=0 -0 ;while true do if (0~=v114) then else for v128=1881 -(1085 + 795) ,v37 do local v129=0 + 0 ;local v130;local v131;while true do if (v129~=(973 -(355 + 618))) then else v130=v22();v131=nil;v129=676 -(312 + 363) ;end if (v129~=1) then else if (v130==1) then v131=v22()~=0 ;elseif (v130==(190 -(81 + 107))) then v131=v25();elseif (v130==(4 -1)) then v131=v26();end v38[v128]=v131;break;end end end v36[3]=v22();v114=1;end if (v114==1) then v112=1;break;end end end if (v112==1) then for v116=1,v24() do local v117=0 -0 ;local v118;local v119;local v120;while true do if (v117~=0) then else v118=0;v119=nil;v117=1 -0 ;end if (v117==1) then v120=nil;while true do if (v118==0) then local v133=0 -0 ;while true do if (v133==0) then v119=0;v120=nil;v133=1;end if (v133~=1) then else v118=1;break;end end end if (v118~=1) then else while true do if (v119~=0) then else v120=v22();if (v21(v120,1549 -(28 + 1520) ,1 -0 )==0) then local v136=0;local v137;local v138;local v139;local v140;while true do if (2~=v136) then else while true do if (v137==(1110 -(852 + 257))) then local v291=605 -(130 + 475) ;local v292;while true do if (v291~=(0 -0)) then else v292=0 -0 ;while true do if (v292~=(622 -(323 + 298))) then else v137=2;break;end if (v292~=0) then else local v390=0;while true do if ((3 -2)~=v390) then else v292=1;break;end if (0==v390) then v140={v23(),v23(),nil,nil};if (v138==(197 -(51 + 146))) then local v434=0;while true do if (v434==0) then v140[3]=v23();v140[4]=v23();break;end end elseif (v138==(246 -(146 + 99))) then v140[745 -(244 + 498) ]=v24();elseif (v138==2) then v140[14 -11 ]=v24() -((6 -4)^16) ;elseif (v138==(1 + 2)) then local v468=0;local v469;while true do if (v468==(0 + 0)) then v469=0;while true do if (v469~=(0 + 0)) then else v140[3]=v24() -((1 + 1)^(1645 -(733 + 896))) ;v140[4]=v23();break;end end break;end end end v390=1 -0 ;end end end end break;end end end if (v137==(0 -0)) then local v293=789 -(128 + 661) ;local v294;local v295;while true do if (v293==(263 -(195 + 68))) then v294=0 + 0 ;v295=nil;v293=1 + 0 ;end if (v293~=(756 -(743 + 12))) then else while true do if ((1261 -(940 + 321))==v294) then v295=0 -0 ;while true do if (v295~=1) then else v137=1 + 0 ;break;end if (v295==(0 + 0)) then local v419=0 -0 ;local v420;while true do if ((1177 -(563 + 614))~=v419) then else v420=0 -0 ;while true do if (v420==(1460 -(670 + 790))) then v138=v21(v120,4 -2 ,915 -(615 + 297) );v139=v21(v120,4,6);v420=1 + 0 ;end if (v420==1) then v295=1479 -(910 + 568) ;break;end end break;end end end end break;end end break;end end end if (v137~=(2 + 1)) then else if (v21(v139,2 + 1 ,3)==1) then v140[6 -2 ]=v38[v140[4]];end v33[v116]=v140;break;end if (v137==(5 -3)) then local v297=248 -(85 + 163) ;local v298;while true do if (v297==0) then v298=0 -0 ;while true do if (v298~=1) then else v137=2 + 1 ;break;end if (v298~=(0 + 0)) then else local v391=0;while true do if (v391~=0) then else if (v21(v139,2 -1 ,1 -0 )==1) then v140[2 + 0 ]=v38[v140[2]];end if (v21(v139,2,2)~=(1 + 0)) then else v140[7 -4 ]=v38[v140[3]];end v391=1;end if (v391==(1 + 0)) then v298=1;break;end end end end break;end end end end break;end if (v136~=0) then else local v169=0 + 0 ;local v170;while true do if (v169==0) then v170=784 -(427 + 357) ;while true do if (v170==(1802 -(55 + 1747))) then v137=0 -0 ;v138=nil;v170=1 + 0 ;end if (v170==(255 -(141 + 113))) then v136=1;break;end end break;end end end if (v136~=1) then else v139=nil;v140=nil;v136=1583 -(269 + 1312) ;end end end break;end end break;end end break;end end end v32=3;break;end end end if (v32~=(1 + 0)) then else local v113=0 + 0 ;while true do if (v113~=1) then else v38={};v32=2;break;end if (v113==(261 -(223 + 38))) then v36={v33,v34,nil,v35};v37=v24();v113=555 -(226 + 328) ;end end end break;end if (v79==0) then local v107=1213 -(746 + 467) ;while true do if (v107==0) then if (v32==3) then for v121=1999 -(1042 + 956) ,v24() do v34[v121-(2 -1) ]=v29();end for v123=1,v24() do v35[v123]=v24();end return v36;end if (0~=v32) then else local v115=279 -(208 + 71) ;while true do if (v115~=(1 + 0)) then else v35={};v32=2 -1 ;break;end if (v115==0) then v33={};v34={};v115=1;end end end v107=1;end if (v107==(1 -0)) then v79=1165 -(859 + 305) ;break;end end end end break;end end end break;end end end v30=nil;v18=7;end if (v18==1) then v21=nil;function v21(v39,v40,v41)if v41 then local v70=249 -(44 + 205) ;local v71;while true do if (v70==(0 + 0)) then v71=(v39/((3 -1)^(v40-(1 + 0))))%((1 + 1)^(((v41-((2632 -(700 + 220)) -(913 + (1682 -(466 + 418))))) -(v40-(2 -1))) + (708 -(685 + 22)))) ;return v71-(v71%1) ;end end else local v72=0;local v73;while true do if (v72==0) then v73=(1 + 1)^(v40-(1357 -(216 + 1140))) ;return (((v39%(v73 + v73))>=v73) and (1 + 0)) or (141 -(35 + 40 + 66)) ;end end end end v22=nil;v18=2;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (2==v18) then function v22()local v42=468 -((67 -18) + 419) ;local v43;while true do if ((0 + 0)==v42) then v43=v1(v16,v19,v19);v19=v19 + (3 -2) ;v42=(234 + 278) -(308 + 203) ;end if (v42==(1 -0)) then return v43;end end end v23=nil;function v23()local v44=1557 -(1494 + 63) ;local v45;local v46;while true do if (v44==1) then return (v46 * (122 + 134)) + v45 ;end if (v44==(0 + 0)) then v45,v46=v1(v16,v19,v19 + 2 );v19=v19 + 2 + 0 ;v44=1 + 0 ;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v47)if (v1(v47,2)==79) then v20=v0(v3(v47,1,1));return "";else local v74=v2(v0(v47,16));if v20 then local v80=v5(v74,v20);v20=nil;return v80;else return v74;end end end);v18=1;end if (3==v18) then v24=nil;function v24()local v48,v49,v50,v51=v1(v16,v19,v19 + (4 -1) );v19=v19 + 4 ;return (v51 * (60830799 -44053583)) + (v50 * 65536) + (v49 * (175 + 81)) + v48 ;end v25=nil;v18=4;end if (v18==4) then function v25()local v52=1105 -(173 + 69 + 863) ;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==(1 + 1)) then v57=v21(v54,75 -54 ,31);v58=((v21(v54,32)==(237 -(148 + 88))) and  -(1 + 0 + 0)) or (1 + 0) ;v52=3;end if (v52==((0 -0) + 0)) then v53=v24();v54=v24();v52=1 -0 ;end if (v52==1) then v55=1 -0 ;v56=(v21(v54,1 -0 ,13 + 7 ) * ((1 + (1 -0))^(46 -14))) + v53 ;v52=213 -(60 + 151) ;end if (((10 -7) -(0 -0))==v52) then if (v57==(0 -0)) then if (v56==(0 + 0)) then return v58 * (0 -(0 + 0)) ;else local v90=0 -0 ;while true do if ((0 -0)==v90) then v57=3 -2 ;v55=503 -(243 + 260) ;break;end end end elseif (v57==(1163 + 884)) then return ((v56==((0 -0) -0)) and (v58 * ((1 + 0)/(103 -(23 + 80))))) or (v58 * NaN) ;end return v8(v58,v57-(1648 -(506 + 107 + 12)) ) * (v55 + (v56/((1513 -(386 + 12 + 1113))^52))) ;end end end v26=nil;function v26(v59)local v60=1354 -(559 + 795) ;local v61;local v62;while true do if (v60==(0 + 0)) then v61=nil;if  not v59 then local v89=102 -(54 + 48) ;while true do if (v89==(0 + 0)) then v59=v24();if (v59==((0 + 0) -0)) then return "";end break;end end end v60=1 -0 ;end if ((1679 -(463 + (3107 -(272 + 1620))))==v60) then v61=v3(v16,v19,(v19 + v59) -(1322 -(485 + 836)) );v19=v19 + v59 ;v60=2 + 0 ;end if (v60==((958 -(518 + 439)) + 1)) then v62={};for v81=1, #v61 do v62[v81]=v2(v1(v3(v61,v81,v81)));end v60=2 + 1 ;end if (v60==3) then return v6(v62);end end end v18=5;end if (v18==7) then function v30(v63,v64,v65)local v66=0;local v67;local v68;local v69;while true do if (v66==1) then v69=v63[3];return function(...)local v83=0;local v84;local v85;local v86;local v87;local v88;while true do if (v83==1) then v86={...};v87=v12("#",...) -1 ;v83=2;end if (v83==0) then v84=1;v85= -1;v83=1;end if (v83==3) then A,B=v28(v11(v88));if  not A[1] then local v101=0;local v102;while true do if (v101==0) then v102=v63[4][v84] or "?" ;error("Script error at ["   .. v102   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v83==2) then v88=nil;function v88()local v91=v67;local v92=v68;local v93=v69;local v94=v28;local v95={};local v96={};local v97={};for v103=0,v87 do if ((v103>=v93) or ((1166 + 345)==(1910 -((3953 -2427) + 200)))) then v95[v103-v93 ]=v86[v103 + 1 ];else v97[v103]=v86[v103 + (499 -(128 + 370)) ];end end local v98=(v87-v93) + (1972 -(1091 + 880)) ;local v99;local v100;while true do local v104=674 -(491 + 183) ;local v105;local v106;while true do if (((4443 -(440 + 646))>=2432) and (((4 -2) -1)==v104)) then while true do if (((1652 -(354 + 85))<(3007 -(226 + 1459))) and (v105==(0 + 0))) then v106=1496 -(1053 + (1696 -1253)) ;while true do if (((14034 -9142)>(2658 -(49 + 178))) and (v106==(0 -0))) then local v126=0;local v127;while true do if ((v126==0) or (4145<=(1492 -(73 + 668)))) then v127=1752 -(1260 + 492) ;while true do if (((3689 -1246)<=(2557 + 646)) and (v127==(1527 -(754 + 772)))) then v106=318 -(82 + 235) ;break;end if ((v127==(0 + 0 + 0)) or ((3 + 19)>(3955 -(21 + 43)))) then v99=v91[v84];v100=v99[1];v127=1 -0 ;end end break;end end end if (((4 -3)==v106) or (1771==1464)) then if ((v100<=(41 -16)) or ((13142 -8261)<=(313 + 1464))) then if ((v100<=(1333 -(984 + 337))) or ((2536 -(397 + 1191))>1091)) then if ((v100<=(1551 -(108 + 1438))) or (1149>=(4473 -(187 + 93)))) then if ((v100<=2) or (3101>(1232 + (10557 -7923)))) then if (((3832 -(107 + 131))>(5606 -2515)) and (v100<=(0 + 0))) then local v141=0 + 0 ;local v142;local v143;local v144;local v145;while true do if ((v141==((2637 -(1604 + 155)) -(734 + 143))) or ((285 + 1415)==(10881 -(1277 + 5140)))) then local v272=951 -(609 + 342) ;while true do if (((200 + 202)==402) and (v272==1)) then v141=1987 -((1098 -(184 + 672)) + 1743) ;break;end if ((v272==0) or ((2832 -(125 + 872))>(652 + 1290 + 781))) then v144=nil;v145=nil;v272=2 -1 ;end end end if ((v141==2) or ((2789 -(808 + 23))<=((2281 -(93 + 309)) + 35))) then while true do if ((v142==0) or (2267<(37 + 11))) then local v307=1140 -(424 + 716) ;while true do if (((2421 -(247 + 291))>=((3790 -2341) -(56 + 481))) and (v307==0)) then local v360=0;while true do if ((v360==0) or ((8460 -(4998 -(96 + 351)))<(4841 -(1111 + 333)))) then v143=v99[3 -1 ];v144={v97[v143](v13(v97,v143 + 1 ,v85))};v360=1 + 0 ;end if (((3573 -(1165 + 719))<(1988 -(17 + 195))) and (v360==(840 -(162 + 677)))) then v307=1;break;end end end if ((v307==(1 -0)) or (1634>=3516)) then v142=3 -2 ;break;end end end if ((1==v142) or ((435 + 686)<=(92 + 394))) then v145=0 + 0 ;for v332=v143,v99[439 -(264 + 171) ] do local v333=222 -(212 + 10) ;local v334;local v335;while true do if ((2462>=(7900 -5643)) and ((43 -(8 + 35))==v333)) then v334=15 -(5 + 10) ;v335=nil;v333=1565 -(996 + 568) ;end if (((237 + 763)<=(2111 + 1599)) and ((1 + 0)==v333)) then while true do if ((v334==(0 -(1568 -(430 + 1138)))) or (291>=(4008 -2622))) then v335=0;while true do if (((1159 -(85 + 1074))==v335) or ((6039 -(885 + 1102))<=(1020 -611))) then v145=v145 + 1 ;v97[v332]=v144[v145];break;end end break;end end break;end end end break;end end break;end if (((2005 + 1552)>=2044) and (v141==((1696 -(935 + 761)) -0))) then v142=0 -0 ;v143=nil;v141=1 + 0 ;end end elseif ((v100>(1 + 0)) or ((2839 + 769)==(4951 -(83 + (26 -7))))) then local v171=0 -0 ;local v172;local v173;while true do if (((3220 -2410)<=1935) and (v171==1)) then while true do if ((v172==((1802 -(1752 + 50)) + 0)) or ((2881 -1843)==(1759 -(90 + 740)))) then v173=v99[7 -5 ];v97[v173]=v97[v173](v13(v97,v173 + (1595 -((1808 -1127) + 913)) ,v85));break;end end break;end if ((v171==(0 -0)) or ((1644 + (988 -(73 + 214)))>=(1281 + 3619))) then v172=0;v173=nil;v171=1;end end else do return v97[v99[2 + 0 ]];end end elseif ((v100<=(11 -8)) or ((4532 -(100 + 57))<=(7620 -4908))) then local v146=0;local v147;local v148;local v149;local v150;local v151;local v152;while true do if ((v146==(0 + 0)) or (3343<(8337 -5403))) then v147=0;v148=nil;v146=1223 -(952 + (1570 -(805 + 495))) ;end if ((((6042 -(712 + 141)) -(158 + 36 + 409))==(19526 -14940)) and (v146==(542 -(537 + 2)))) then while true do if (((553 + 3030)>959) and (v147==(3 -2))) then local v308=(823 + 208) -(66 + 965) ;while true do if ((v308==1) or (2025>4554)) then v147=2 + 0 + 0 + 0 ;break;end if ((4518>(8759 -4697)) and (v308==(0 + 0))) then v150=nil;v151=nil;v308=1130 -(927 + 202) ;end end end if ((v147==(0 -0)) or (4311<=(1484 -(402 + 970)))) then v148=0 -0 ;v149=nil;v147=1;end if ((v147==(2 + 0)) or (2681<=(9255 -6867))) then v152=nil;while true do if ((v148==(0 + 0)) or ((12166 -8213)<(573 + 1235 + 669))) then local v361=0 -0 ;while true do if ((((815 + 5807) -(3086 -(684 + 437)))==(5833 -(891 + 285))) and (v361==0)) then local v405=0 -(0 -0) ;while true do if ((v405==0) or ((2871 + 1424)==(3285 -(215 + 90 + 64)))) then v149=v99[1 + 1 ];v150,v151=v94(v97[v149](v13(v97,v149 + (2 -1) ,v99[3])));v405=1 + 0 ;end if (((220 + 834)<(12605 -8043)) and (1==v405)) then v361=1;break;end end end if (((12145 -8959)<(3556 + 351)) and (v361==(903 -(152 + 750)))) then v148=1032 -((2976 -(944 + 1009)) + 8) ;break;end end end if ((v148==(4 -(1269 -(1002 + 265)))) or ((2233 -518)>=(6540 -(1071 + 547)))) then for v379=v149,v85 do local v380=0 + 0 + 0 ;local v381;while true do if (((0 + 0)==v380) or ((221 + 3939)==(3421 + 1239))) then v381=1860 -(7 + 311 + (3362 -1820)) ;while true do if ((v381==(1011 -(519 + (1733 -(1175 + 66))))) or ((3270 -2135)<=((2685 -1479) -581))) then v152=v152 + (2 -1) ;v97[v379]=v150[v152];break;end end break;end end end break;end if ((1==v148) or ((7701 -3083)<(5899 -(238 + 1142)))) then local v362=0 -0 ;while true do if (((4501 -1042)>=(7089 -4122)) and (v362==(1 + 0))) then v148=(3060 -(1463 + 486)) -((1449 -(221 + 667)) + 548) ;break;end if ((1413>(1621 -(1064 + 5))) and (v362==(0 -0))) then local v406=0;while true do if (((4565 -(38 + 10))==((26879 -21116) -(898 + 348))) and (v406==(62 -(58 + 4)))) then v85=(v151 + v149) -1 ;v152=215 -(136 + 79) ;v406=223 -(41 + 181) ;end if ((v406==(682 -(520 + 161))) or ((7300 -3218)==1557)) then v362=1664 -(1189 + 474) ;break;end end end end end end break;end end break;end if ((v146==1) or ((855 -(450 + 137))>=1002)) then v149=nil;v150=nil;v146=2 + 0 ;end if (((7741 -4243)==3498) and (2==v146)) then v151=nil;v152=nil;v146=6 -3 ;end end elseif (((1416 -(257 + 395))<4021) and (v100>4)) then local v174=901 -(445 + 456) ;local v175;local v176;local v177;while true do if ((v174==(1 + 0)) or ((823 + 170)==(1345 + 385))) then v177=nil;while true do if ((3426>=1302) and (v175==((3 -2) + 0))) then while true do if (((890 + 1346)>=642) and (v176==(0 -0))) then v177=v99[2 + 0 ];v97[v177]=v97[v177](v13(v97,v177 + (1447 -(955 + 491)) ,v99[11 -8 ]));break;end end break;end if ((v175==(654 -(536 + 118))) or ((5814 -1768)<=(1773 -1174))) then v176=0 -0 ;v177=nil;v175=1848 -(1201 + 646) ;end end break;end if ((v174==(0 -0)) or ((4092 -(177 + 772))<=1892)) then v175=454 -(8 + 79 + 198 + 169) ;v176=nil;v174=390 -(263 + 126) ;end end else local v178=v99[2 + 0 ];local v179=v99[16 -12 ];local v180=v178 + 2 ;local v181={v97[v178](v97[v178 + 1 ],v97[v180])};for v273=1,v179 do v97[v180 + v273 ]=v181[v273];end local v182=v181[(2876 -(1573 + 236)) -(895 + (1968 -(1178 + 619))) ];if (v182 or ((4393 -(849 + 1106))>=(6560 -(943 + 837)))) then local v280=1355 -(464 + 891) ;local v281;while true do if ((v280==((0 -0) -0)) or (((651 + 2487) -(242 + 123))>=(386 + 2615))) then v281=0 -0 ;while true do if ((0==v281) or ((18355 -13385)<2775)) then v97[v180]=v182;v84=v99[511 -(303 + 205) ];break;end end break;end end else v84=v84 + (1150 -(791 + 358)) ;end end elseif ((v100<=8) or (((4147 + 340) -(239 + 526))<=(1699 -991))) then if ((1643<=(3661 -(237 + (1781 -(536 + 1067))))) and (v100<=(5 + 1))) then if ((v97[v99[3 -1 ]]==v97[v99[3 + 1 ]]) or (775==4802)) then v84=v84 + ((2 + 0) -1) ;else v84=v99[3];end elseif ((((874 -256) + 120)<=(1858 + 403)) and (v100==(3 + 4))) then local v184=0;local v185;local v186;local v187;while true do if (((2070 -(257 + 738))==1075) and (v184==((3576 -2669) -(767 + 139)))) then v187=v97[v185 + (5 -3) ];if ((v187>0) or ((3650 -2311)>=(673 + 1147))) then if ((v186>v97[v185 + (1 -0) ]) or ((5294 -(31 + 1662))>=(2307 + 1459))) then v84=v99[11 -8 ];else v97[v185 + (353 -((421 -254) + 183)) ]=v186;end elseif ((v186<v97[v185 + (738 -(230 + 507)) ]) or (((6879 -(535 + 404)) -(67 + 2846))<=(1624 -(17 + 357)))) then v84=v99[1781 -(1709 + 69) ];else v97[v185 + 3 + 0 ]=v186;end break;end if ((v184==(536 -((663 -205) + 78))) or ((4626 -2441)<(254 + 304))) then local v300=0 + 0 ;while true do if ((v300==(1661 -(233 + (4262 -2834)))) or ((3925 -(164 + 388))<(1628 + 289))) then v185=v99[2];v186=v97[v185];v300=1;end if ((v300==(1 + 0)) or ((1720 + 20)>=(1439 + (2633 -(227 + 696))))) then v184=803 -(7 + 795) ;break;end end end end else local v188=764 -(81 + 683) ;local v189;local v190;local v191;while true do if (((1234 + 1196)>((7720 -4106) -(38 + 1152))) and (v188==(1 + 0))) then v191=nil;while true do if (((367 + 1174)==(1876 -(134 + 201))) and (v189==(4 -3))) then for v367=v190 + 1 + 0 ,v85 do v7(v191,v97[v367]);end break;end if (((7341 -3134)>2518) and (v189==(0 -0))) then local v340=0 -0 ;local v341;while true do if ((((10551 -(743 + 265)) -5520)>=(4054 -(763 + 472))) and (0==v340)) then v341=0;while true do if ((((7204 -5287) -(117 + 532))<=(9331 -5149)) and (v341==(0 + 0))) then local v421=0;while true do if ((v421==(357 -(94 + 262))) or ((3950 -1779)>=(5526 -(897 + 940)))) then v341=1 + 0 ;break;end if ((v421==0) or (2168>(4558 -(391 + 357)))) then v190=v99[1560 -(597 + 961) ];v191=v97[v190];v421=2 -1 ;end end end if ((1740>768) and (v341==((1 + 3) -3))) then v189=478 -(206 + 271) ;break;end end break;end end end end break;end if (((0 -(839 -(470 + 369)))==v188) or ((1449 -(26 + 395))==(5368 -(560 + 493)))) then v189=(0 -0) + 0 ;v190=nil;v188=1740 -(1732 + 7) ;end end end elseif (((5344 -(131 + 1759))>=(5271 -3499)) and (v100<=(42 -32))) then if ((v100>(7 + 2)) or ((6524 -2125)<=3343)) then for v276=v99[981 -(441 + 538) ],v99[1578 -(983 + 592) ] do v97[v276]=nil;end else local v192=147 -(98 + 49) ;local v193;local v194;while true do if ((v192==1) or ((4624 -(1837 + 415))<=1288)) then while true do if ((v193==(0 + 0)) or ((4851 -(519 + 28 + 52))<=(243 + 5 + 68))) then v194=v97[v99[794 -(607 + (848 -(599 + 66))) ]];if ( not v194 or ((4912 -2795)<(2642 -1029))) then v84=v84 + (2 -(3 -2)) ;else local v384=0 + 0 ;local v385;while true do if (((190 + 4505)>(3433 + 1202)) and (v384==(0 -0))) then v385=0 -0 ;while true do if (((1876 -(911 + 794))<=(3395 -(49 + 13))) and (v385==(0 -0))) then v97[v99[1 + 1 + 0 ]]=v194;v84=v99[13 -10 ];break;end end break;end end end break;end end break;end if (((1698 -(24 + 155))<(3380 -1751)) and (v192==((1802 -(199 + 178)) -(935 + 490)))) then local v301=(0 -0) -0 ;while true do if ((v301==1) or ((2309 + 327)==(2020 -(112 + 338)))) then v192=2 -1 ;break;end if (((3713 -(19 + 366))>(4298 -1900)) and (v301==0)) then v193=238 -(69 + 169) ;v194=nil;v301=1 + 0 ;end end end end end elseif (((2574 -(144 + 605))>=(432 + 692)) and (v100>11)) then if ((v97[v99[2]]==v99[4 + 0 ]) or ((2807 -(193 + 413))<1518)) then v84=v84 + (1641 -(1123 + 517)) ;else v84=v99[1466 -((645 -(53 + 121)) + 992) ];end else local v195=0 -0 ;local v196;local v197;while true do if ((v195==(0 -0)) or ((847 + 245)<(3851 -(4373 -(1023 + 308))))) then v196=0;v197=nil;v195=1;end if (((1 + 0)==v195) or ((8410 -3619)<=(6011 -2037))) then while true do if (((4696 -(1295 + 123))>=(2145 + 48)) and (v196==((0 -0) + 0))) then v197=v99[2];v97[v197](v13(v97,v197 + 1 + 0 ,v85));break;end end break;end end end elseif ((506<=1042) and (v100<=(59 -41))) then if (((3575 -((3974 -3078) + 587))<(4855 -(833 + 159))) and (v100<=(1336 -(926 + 31 + 364)))) then if (((1869 + 2393)==(5033 -(276 + 495))) and (v100<=(8 + 5))) then local v153=0;local v154;while true do if (((2019 -((1648 -(660 + 802)) + 725))==1108) and (v153==(0 + 0))) then v154=v99[5 -3 ];v97[v154](v97[v154 + 1 ]);break;end end elseif ((v100>14) or ((1637 -(1213 + 317))>=(756 -310))) then if (((3658 -2417)<(6950 -4007)) and (v99[1511 -(811 + 698) ]==v97[v99[6 -2 ]])) then v84=v84 + (1859 -(487 + 1371)) ;else v84=v99[1 + 2 ];end else v97[v99[7 -5 ]]();end elseif (((953 + 87)<(4380 -3323)) and (v100<=16)) then v97[v99[2]]=v97[v99[9 -6 ]][v99[1 + 3 ]];elseif (((6071 -3349)>(1311 -849)) and (v100>(961 -((1407 -1077) + 614)))) then local v198=0 + 0 ;local v199;local v200;while true do if ((v198==0) or ((4077 -(169 + 154))==3620)) then v199=0;v200=nil;v198=2 -1 ;end if ((840==(2287 -((4592 -3268) + 54 + 69))) and (v198==1)) then while true do if ((v199==(0 + 0)) or (1500==(1521 + 460))) then v200=v99[9 -7 ];v97[v200]=v97[v200](v97[v200 + (396 -(17 + 378)) ]);break;end end break;end end else v97[v99[2]]=v99[4 -1 ];end elseif ((914<=(3532 + (1485 -(860 + 259)))) and (v100<=(41 -20))) then if ((644<=4255) and (v100<=(270 -(138 + 113)))) then local v157=0 + 0 ;local v158;local v159;local v160;local v161;while true do if (((4001 -(272 + 100))==(8687 -5058)) and (v157==2)) then while true do if ((2414<=(3951 -(22 + 222))) and (v158==(2 -1))) then local v309=0;local v310;while true do if (((11179 -6409)>2629) and (v309==0)) then v310=0 -0 ;while true do if (((2890 + 1543)==(2606 + 1827)) and ((0 + 0)==v310)) then v161=v97[v159] + v160 ;v97[v159]=v161;v310=1 + 0 ;end if ((v310==(2 -1)) or ((22240 -17672)<=(1479 + 278))) then v158=2 + 0 ;break;end end break;end end end if ((2962>(10 + 157)) and (v158==(763 -(134 + 627)))) then if (((464 -(152 + 6))<=1345) and (v160>(0 + 0))) then if ((2315<((3736 -(160 + 1126)) + (2298 -(210 + 626)))) and (v161<=v97[v159 + 1 + 0 ])) then local v386=0 -0 ;while true do if ((v386==0) or ((77 + 1212)<(3015 -(1718 + 130)))) then v84=v99[1298 -(843 + 148 + 119 + 185) ];v97[v159 + 3 ]=v161;break;end end end elseif ((v161>=v97[v159 + ((2 + 2) -3) ]) or ((5278 -3206)>((4002 -(514 + 1135)) -(25 + 106)))) then local v387=0 + 0 ;local v388;while true do if (((116 + 10 + 4041)>3884) and (v387==(0 -0))) then v388=0;while true do if (((2455 -(428 + (1910 -1084)))<=3767) and (v388==(910 -(37 + 873)))) then v84=v99[1166 -(554 + 609) ];v97[v159 + 3 + 0 ]=v161;break;end end break;end end end break;end if (((1672 -634)<=(18818 -13933)) and (v158==(0 + 0))) then local v311=0 + 0 ;while true do if (((4332 -(73 + 1))>(2238 -1084)) and (v311==(1 + (509 -(104 + 405))))) then v158=3 -2 ;break;end if ((v311==0) or (3006==(1108 -773))) then v159=v99[3 -1 ];v160=v97[v159 + (2 -0) ];v311=1 + 0 ;end end end end break;end if ((v157==(0 + 0)) or ((5616 -2738)==(13538 -8582))) then v158=0;v159=nil;v157=1;end if (((287 + 3253)>=(8474 -(21490 -15052))) and (v157==1)) then v160=nil;v161=nil;v157=1272 -(970 + 300) ;end end elseif ((v100>(2 + 18)) or ((5194 -(858 + 1019))>((5884 -(428 + 715)) + 83))) then local v203=(1311 + 398) -(1683 + 26) ;local v204;local v205;local v206;local v207;while true do if (((1385 + 798)>(1328 -385)) and (v203==(569 -(366 + 203)))) then v204=0 -0 ;v205=nil;v203=1 -0 ;end if (((1098 + 1278)>(3391 -(1268 + 162))) and (v203==(1218 -(383 + 833)))) then while true do if ((v204==(0 + 0)) or (4146<=3484)) then v205=0 -0 ;v206=nil;v204=1 -0 ;end if ((v204==(1 -0)) or ((4608 -((1011 -(610 + 52)) + 971))==(4917 -(530 + 2)))) then v207=nil;while true do if ((v205==(0 + 0)) or ((7862 -5855)>(6717 -(737 + 1049)))) then local v394=0;while true do if ((2530>=((3496 -(84 + 165)) -(90 + (2737 -1198)))) and (v394==(0 + 0))) then v206=v99[509 -(249 + 257) ];v207=v97[v206];v394=1 + 0 ;end if ((v394==((843 -(106 + 76)) -(29 + (2665 -2034)))) or ((3045 -(545 + 580))==(546 + 3149))) then v205=1 + 0 ;break;end end end if ((v205==(1473 -(1137 + 132 + 203))) or ((2891 -(1014 + 55))>=4788)) then for v408=v206 + (782 -(413 + 368)) ,v99[1505 -(1305 + 196) ] do v207=v207   .. v97[v408] ;end v97[v99[580 -((1627 -1295) + 246) ]]=v207;break;end end break;end end break;end if ((v203==((2108 -(138 + 510)) -(1093 + 366))) or (((1576 + 6382) -4641)<(227 + 246))) then v206=nil;v207=nil;v203=2 + 0 ;end end else local v208=366 -(183 + 183) ;local v209;local v210;local v211;local v212;local v213;while true do if ((v208==(0 + 0)) or ((11 + 41)>674)) then v209=1156 -(15 + 1141) ;v210=nil;v208=376 -(141 + 234) ;end if ((v208==(2 -1)) or ((13069 -9393)<(2844 + 173 + 5))) then v211=nil;v212=nil;v208=(2908 -(671 + 280)) -(505 + 107 + 1343) ;end if (((1290 -((1473 -(452 + 691)) + (2072 -(96 + 1018))))==v208) or ((442 + 1595)>(1543 + 1037))) then v213=nil;while true do if (((1065 -(230 + 835))==v209) or ((3112 -(571 + 764))<=(271 + 80))) then v210=0 -0 ;v211=nil;v209=1;end if ((((28591 -16452) -7811)>=(1998 + 2185)) and (v209==(671 -(342 + 327)))) then while true do if ((v210==(0 + (0 -0))) or (2354==(12205 -9203))) then local v396=(1268 + 438) -(994 + 712) ;local v397;while true do if (((14883 -11826)>=(532 -293)) and (v396==(109 -(66 + 43)))) then v397=0 + 0 ;while true do if ((v397==(0 -0)) or ((2104 -(490 + 249))==((1821 -(759 + 444)) + 1141))) then v211=v99[3 -1 ];v212=v97[v211];v397=3 -2 ;end if ((v397==(1 + 0)) or (232>(2880 -(1318 + 544)))) then v210=2 -1 ;break;end end break;end end end if ((v210==(20 -(10 + 9))) or ((4413 -(95 + 131))<((3988 -(78 + 118)) -(876 + 473)))) then v213=v99[1302 -(553 + 746) ];for v409=1490 -(754 + 735) ,v213 do v212[v409]=v97[v211 + v409 ];end break;end end break;end if ((v209==((2 -1) + 0)) or ((4994 -((1302 -932) + 1592))>(2263 + 2543))) then local v346=0 -0 ;while true do if (((5255 -((1972 -(409 + 1517)) + 1551))>(3177 -(360 + (1913 -(485 + 927))))) and ((1 -0)==v346)) then v209=2;break;end if ((v346==0) or (3635<(1738 -1087))) then v212=nil;v213=nil;v346=1 + 0 ;end end end end break;end end end elseif ((v100<=((709 -(282 + 101)) -(155 + 148))) or ((930 + 2044)>=(1256 + 3010 + 533))) then if ((v100==(2 + 11 + 9)) or ((2584 -1625)>(2328 + 1188))) then v97[v99[2 + 0 ]]={};else local v215=1499 -(941 + 558) ;local v216;local v217;local v218;while true do if ((808<(121 + 791)) and (v215==0)) then v216=v92[v99[1479 -(363 + 1113) ]];v217=nil;v215=1;end if (((5398 -(599 + 308))>2049) and (v215==(3 -(1 + 0)))) then for v312=(2348 -805) -(1464 + 78) ,v99[355 -(48 + 162 + 141) ] do local v313=340 -(283 + 57) ;local v314;local v315;local v316;while true do if (((1592 -(414 + 1178))==v313) or ((420 -300)>=(1379 -(35 + 144)))) then v314=0;v315=nil;v313=1 + 0 + 0 ;end if ((2948>=(2488 -1515)) and (v313==(1206 -(587 + 618)))) then v316=nil;while true do if (((359 + 7)==(275 + 91)) and (((2 + 0) -1)==v314)) then while true do if ((1==v315) or (1364>(5348 -(1240 + 95)))) then if ((v316[1]==(17 + 8)) or ((232 + 34)>(4849 -(787 + 499)))) then v218[v312-1 ]={v97,v316[6 -(1140 -(643 + 494)) ]};else v218[v312-(1 + 0) ]={v64,v316[5 -2 ]};end v96[ #v96 + (2 -1) ]=v218;break;end if (((61 + 4640)>(2434 -(1541 + 85))) and (v315==(0 + 0))) then local v428=0;local v429;while true do if ((((5508 -4013) -(599 + 199))>=(748 -(170 + 235))) and (v428==(0 + 0))) then v429=0;while true do if (((333 + 4421)>(2061 -((422 -(84 + 79)) + 722))) and (0==v429)) then local v466=0 -0 ;while true do if ((v466==(2 -1)) or (1620>=(185 + 2075))) then v429=(953 -(179 + 368)) -(51 + 354) ;break;end if (((1179 + 390)<=(1612 + 413)) and ((0 + 0)==v466)) then v84=v84 + 1 + 0 ;v316=v91[v84];v466=1;end end end if ((2620>=(742 + 458)) and (v429==(1098 -(82 + 1015)))) then v315=1 -0 ;break;end end break;end end end end break;end if (((10449 -6091)>(1052 + 2136)) and ((226 -(210 + 16))==v314)) then v315=0;v316=nil;v314=(1 + 2) -2 ;end end break;end end end v97[v99[(2319 -(223 + 1202)) -(457 + 435) ]]=v30(v216,v217,v65);break;end if ((v215==(3 -2)) or (4109==(5102 -(158 + 263)))) then v218={};v217=v10({},{__index=function(v317,v318)local v319=(3612 -1960) -(730 + 922) ;local v320;local v321;local v322;while true do if ((v319==(1 + 0)) or ((472 + 612)>=(4769 -2422))) then v322=nil;while true do if (((3414 -1672)<=((3395 + 782) -1863)) and (v320==1)) then while true do if ((1969>(5298 -(8508 -4322))) and (v321==0)) then local v430=713 -(56 + 657) ;while true do if ((1962==(43 + 1919)) and (v430==(603 -(154 + 449)))) then local v462=0;while true do if (((1225 -(504 + 17))<=(4547 -(554 + 110))) and (v462==(0 -0))) then v322=v218[v318];return v322[1773 -(1303 + 469) ][v322[1044 -(659 + 383) ]];end end end end end end break;end if ((((1129 -(109 + 239)) -439)<(3163 -1250)) and (v320==(0 + 0))) then v321=0 + 0 ;v322=nil;v320=1;end end break;end if ((v319==(1753 -(471 + 1282))) or ((5091 -(222 + 1575))>=((13460 -(170 + 41)) -8900))) then v320=0;v321=nil;v319=1;end end end,__newindex=function(v323,v324,v325)local v326=(1225 -433) -(738 + 54) ;local v327;local v328;while true do if ((1==v326) or ((3060 -(430 + 33 + 1375))>=(4649 -3356))) then while true do if (((387 + 507)<3503) and (v327==(0 -0))) then v328=v218[v324];v328[1014 -(82 + 931) ][v328[(2505 -963) -(1087 + 453) ]]=v325;break;end end break;end if (((3249 -((1488 -934) + 100))>=(746 + 1002)) and (v326==(0 + 0))) then local v370=0;while true do if (((2513 + 303)>(2398 -(1187 + 401))) and (v370==(0 + (0 -0)))) then v327=140 -(59 + 81) ;v328=nil;v370=1;end if (((1775 -(103 + 221))<1725) and (v370==1)) then v326=1;break;end end end end end});v215=2;end end end elseif ((v100>24) or ((5061 -3375)<=(1818 -((1577 -1252) + 606)))) then v97[v99[3 -1 ]]=v97[v99[3]];else local v221=711 -(443 + (1269 -1001)) ;local v222;while true do if ((v221==(526 -(209 + 317))) or ((1028 + 875)<1066)) then v222=v99[5 -3 ];do return v13(v97,v222,v222 + v99[7 -4 ] );end break;end end end elseif (((12282 -8033)<=(4984 -(16 + 453))) and (v100<=(996 -(46 + 116 + 796)))) then if ((v100<=(14 + 17)) or (((6914 -5051) + 1303)>=4120)) then if (((1286 + 292)==1578) and (v100<=(82 -54))) then if (((1887 + 2511)>=(6989 -3353)) and (v100<=(7 + 19))) then v84=v99[13 -10 ];elseif ((v100>(2009 -(1960 + 22))) or ((2265 -(730 + 462))>(5188 -(1156 + 174)))) then if ((((31996 -17633) -10112)>2676) and v97[v99[2 + 0 ]]) then v84=v84 + 1 + 0 ;else v84=v99[3];end else local v223=0 + 0 + 0 ;local v224;local v225;local v226;while true do if (((1595 + 3114)>=((3371 + 3651) -3688)) and (v223==0)) then v224=0;v225=nil;v223=1;end if (((3040 -1779)==(1646 -385)) and (v223==(1 + 0 + 0))) then v226=nil;while true do if (((1120 + (4740 -(381 + 1616)))==(1654 + 2209)) and (v224==(0 + 0 + 0))) then local v347=0;while true do if (((0 -0)==v347) or (((1823 + 2169) -2746)>(2261 + 1832))) then v225=0 -0 ;v226=nil;v347=1;end if ((((2921 -(1321 + 88)) -(918 + 293))<=407) and (v347==(2 -1))) then v224=(4 -2) -1 ;break;end end end if ((v224==(1 + 0)) or (((54810 -36689) -14411)<=(8307 -5469))) then while true do if (((1086 -444)<(2863 -802)) and (0==v225)) then v226=v99[2];do return v97[v226](v13(v97,v226 + (1347 -(107 + 1239)) ,v85));end break;end end break;end end break;end end end elseif (((5517 -2792)>(2125 -(497 + 1197))) and (v100<=(74 -45))) then v65[v99[3]]=v97[v99[2 + 0 ]];elseif (((249 + 418)<=3467) and (v100==(29 + 1))) then v97[v99[3 -1 ]]= -v97[v99[10 -7 ]];else local v228=0 + 0 ;local v229;local v230;local v231;while true do if ((v228==(0 + (0 -0))) or ((3080 -(637 + 312))>(4504 -(461 + 597)))) then v229=212 -(121 + 91) ;v230=nil;v228=1 + 0 + 0 ;end if ((v228==(1470 -(1233 + 236))) or ((3557 -2447)>(2446 -(600 + (1134 -702))))) then v231=nil;while true do if ((3582>=(309 + (1753 -(1140 + 367)))) and (v229==0)) then local v348=0;while true do if ((v348==(841 -(778 + 63))) or ((1999 -826)==(2382 -1443))) then v230=v99[(2 + 0) -0 ];v231=v97[v99[5 -(2 -0) ]];v348=1 + 0 ;end if ((757<=(202 + 1157)) and (v348==(3 -2))) then v229=1;break;end end end if ((v229==((1935 -(1134 + 799)) -1)) or ((46 + 57)==1302)) then v97[v230 + 1 ]=v231;v97[v230]=v231[v99[2 + 2 ]];break;end end break;end end end elseif (((6568 -(207 + 1576))>(3738 -2025)) and (v100<=(732 -(214 + 484)))) then if (((3452 -(523 + 1259))<=3493) and (v100<=(49 -17))) then v97[v99[1 + 1 ]]=v30(v92[v99[(5090 -3191) -((2311 -1613) + 1198) ]],nil,v65);elseif (((1250 -(716 + (1651 -(31 + 1236))))==(598 -(53 + 395))) and (v100==(869 -(486 + 350)))) then if (((5668 -(325 + 864))>3467) and  not v97[v99[6 -4 ]]) then v84=v84 + (1273 -(858 + 414)) ;else v84=v99[3 + 0 + 0 ];end else v97[v99[2 + (0 -0) ]][v99[3]]=v97[v99[1702 -(429 + 1269) ]];end elseif ((279<=2748) and (v100<=36)) then if ((v100>35) or ((13391 -8618)<(2531 -(164 + 1367)))) then local v234=108 -(59 + 49) ;local v235;local v236;while true do if ((((2616 + 1688) -(158 + 453))>=((2277 -(675 + 35)) -388)) and (v234==1)) then while true do if (((0 -0)==v235) or ((523 + 3485)>=(6320 -(830 + 907 + 16)))) then v236=v99[2 + 0 ];v97[v236](v13(v97,v236 + 1 ,v99[2 + 1 ]));break;end end break;end if (((1713 -(1617 + 96))==v234) or ((4939 -(27 + 30))<4880)) then local v305=0 + 0 ;while true do if ((v305==1) or ((1737 + 2744)<=(3076 -(252 + 468)))) then v234=1 -0 ;break;end if ((v305==((0 + 0) -0)) or (((4102 -(64 + 366)) -(287 + 382))<((235 + 381) -196))) then v235=0;v236=nil;v305=(867 -(691 + 174)) -1 ;end end end end else local v237=0 -0 ;local v238;local v239;local v240;while true do if ((v237==0) or (((3304 -1034) + 2267)==(11747 -7285))) then v238=0;v239=nil;v237=1 + 0 ;end if ((4417>=(317 + 3441 + 582)) and (v237==(3 -2))) then v240=nil;while true do if ((v238==0) or ((4608 -((1891 -1393) + 30))<=(793 -(12 + 133)))) then v239=0;v240=nil;v238=1;end if ((v238==(1 -0)) or (3852<=(5893 -4141))) then while true do if (((847 + 2285)>=(2031 + 865)) and (v239==(0 -(84 -(69 + 15))))) then v240=v99[1 + 1 ];do return v97[v240](v13(v97,v240 + (1 -0) ,v99[935 -(555 + 377) ]));end break;end end break;end end break;end end end elseif ((((4341 -2800) + 538 + 712)<=(4575 -(563 + 421))) and (v100==((4779 -3109) -(1533 + 100)))) then v97[v99[3 -1 ]]=v97[v99[3]][v97[v99[1406 -(1359 + 43) ]]];else v97[v99[7 -5 ]]=v65[v99[1 + 2 ]];end elseif (((5210 -2031)>=(636 + 1650)) and (v100<=(38 + 6))) then if ((1832>=36) and (v100<=(22 + 19))) then if (((1948 + 2405)==(5573 -(732 + 488))) and (v100<=(1491 -(987 + 465)))) then local v166=0 + 0 ;local v167;while true do if ((v166==0) or ((6434 -(550 + (2130 -1220)))<(727 -316))) then local v279=0 -0 ;while true do if ((v279==(4 -3)) or (1035>=(2682 -(114 + 125)))) then v166=1 + 0 ;break;end if (((1824 + 2185)<4295) and (v279==(0 -0))) then v167=v99[4 -2 ];v85=(v167 + v98) -(4 -3) ;v279=1;end end end if ((v166==(3 -2)) or ((497 + 3074)==(1518 -(31 + 1133 + 226)))) then for v286=v167,v85 do local v287=0 + 0 ;local v288;local v289;local v290;while true do if ((v287==(0 -0)) or ((53 + (630 -317))>(9863 -7014))) then v288=1765 -(1694 + 71) ;v289=nil;v287=1 + 0 ;end if (((1275 + 55)<(606 + 4355)) and ((2 -1)==v287)) then v290=nil;while true do if ((v288==1) or ((2930 -808)<=33)) then while true do if (((1577 + 743)<=(4179 -1305)) and (v289==(859 -(616 + 243)))) then v290=v95[v286-v167 ];v97[v286]=v290;break;end end break;end if ((v288==(0 -0)) or ((373 + 4620)==(3807 + 669))) then local v389=0;while true do if (((10968 -6449)<=(3296 + 1413)) and (v389==(0 -0))) then v289=0 -0 ;v290=nil;v389=1 -0 ;end if (((734 -(266 + 39))<=(1812 -1066)) and (v389==(1889 -(1375 + 513)))) then v288=1849 -(1501 + 347) ;break;end end end end break;end end end break;end end elseif ((v100==(81 -41)) or (387>(2546 + 791))) then local v245=0 + 0 + 0 ;local v246;local v247;local v248;while true do if (((1477 + 214)==(4171 -2480)) and (v245==(0 -0))) then v246=0 + 0 ;v247=nil;v245=384 -(140 + 243) ;end if ((v245==(1022 -(227 + 794))) or (3399==(3270 -(960 + (1195 -(1171 + 2)))))) then v248=nil;while true do if (((4167 -(53 + 156))<(4808 -(440 + 332))) and (v246==(1 + 0))) then for v371=v247 + 1 ,v99[3] do v7(v248,v97[v371]);end break;end if ((v246==(0 + 0 + 0)) or ((10526 -6773)>(14860 -10761))) then local v353=0;local v354;while true do if (((1055 + 68)<=(332 + 3013)) and (v353==(0 + 0))) then v354=1880 -(620 + 1260) ;while true do if (((5667 -((2051 -(930 + 925)) + 701))>=(4432 -1031)) and (v354==1)) then v246=4 -3 ;break;end if (((13855 -9814)==(2902 + 1139)) and (v354==(0 + 0))) then local v424=0;while true do if ((v424==(1887 -(981 + 906))) or (957>=2673)) then v247=v99[1 + (1 -0) ];v248=v97[v247];v424=1;end if ((v424==((197 -(51 + 144)) -1)) or ((6142 -(498 + 884))>(18491 -13723))) then v354=1 -0 ;break;end end end end break;end end end end break;end end else local v249=0 -0 ;local v250;local v251;while true do if ((v249==0) or ((5671 -2081)<(3287 -1173))) then v250=986 -(849 + 137) ;v251=nil;v249=2 -(1 -0) ;end if (((2 -1)==v249) or (150>(2767 + 1243))) then while true do if ((v250==(0 -0)) or ((940 -291)>(2586 -(230 + 4 + 123)))) then v251=v99[5 -3 ];v97[v251]=v97[v251]();break;end end break;end end end elseif ((4973>=(554 + (5279 -(834 + 439)))) and (v100<=(1 + 41))) then v97[v99[5 -3 ]]=v99[2 + 1 ]~=0 ;elseif ((v100==(1 + 42)) or ((7017 -(4359 + 665))>3364)) then v97[v99[2 + 0 ]]=v97[v99[1 + 2 ]]/v99[8 -4 ] ;else v97[v99[(7 + 0) -5 ]][v99[1974 -(258 + 1713) ]]=v99[2 + 2 ];end elseif ((1854<=4593) and (v100<=(38 + 9))) then if ((v100<=(1856 -(312 + 1499))) or ((4202 -(1302 + 159))<=(3192 -(95 + 435)))) then if (((244 + 37)<=(3578 -2324)) and (v97[v99[1731 -(1644 + 85) ]]~=v99[9 -5 ])) then v84=v84 + ((4531 -2623) -((1749 -(964 + 30)) + 1152)) ;else v84=v99[3 + (0 -0) ];end elseif ((2724>(176 + 598)) and (v100==(69 -23))) then local v256=0 -0 ;local v257;local v258;local v259;local v260;local v261;while true do if ((v256==2) or (2412==(2305 + 563))) then v261=nil;while true do if (((2564 + 1150)>(3658 -2919)) and (v257==(1090 -(246 + 843)))) then v85=(v260 + v258) -(1934 -(96 + 1837)) ;v261=0 -0 ;v257=2;end if (((679 -(462 + 217))==v257) or (((9438 -4358) -(8655 -5570))<=(16 + 1689))) then v258=v99[2];v259,v260=v94(v97[v258](v97[v258 + ((708 -(139 + 44)) -(500 + 24)) ]));v257=2 -1 ;end if ((v257==(1 + 1)) or (4794<(5214 -(3918 -(133 + 24))))) then for v372=v258,v85 do local v373=0 + 0 ;local v374;while true do if ((((10307 -6187) + 18)>=(1006 + 1454)) and (v373==(0 + 0))) then v374=0 + 0 + 0 ;while true do if (((6799 -(1044 + 853))>=3520) and (v374==(0 + 0))) then v261=v261 + (275 -(64 + 210)) ;v97[v372]=v259[v261];break;end end break;end end end break;end end break;end if (((1158 + 286 + 37 + 639)==(1465 + 655)) and (v256==((524 -(172 + 352)) + (424 -(13 + 411))))) then v257=0 -0 ;v258=nil;v256=13 -((19 -14) + 7) ;end if (((664 + 535)<=(2790 -(527 + 193))) and (v256==(4 -3))) then v259=nil;v260=nil;v256=802 -(766 + 34) ;end end else v97[v99[2 -0 ]]=v64[v99[3]];end elseif (((2351 + 1290)>(1520 -(659 + 420))) and (v100<=(1581 -(1149 + 383)))) then if ((v100==((92 + 75) -119)) or ((5871 -(844 + 252))<=(12556 -9535))) then local v264=0;local v265;local v266;while true do if (((14737 -10807)>(809 + 244 + 1532)) and (v264==((4732 -3358) -((917 -(601 + 52)) + 1110)))) then v265=186 -(55 + 131) ;v266=nil;v264=1;end if ((((2588 -(139 + 193)) -(44 + 369))<=(1946 + 1426)) and ((1 + 0)==v264)) then while true do if (((1324 -(780 + 17))==(2515 -((3089 -1263) + (920 -(161 + 597))))) and (v265==(0 + 0 + 0))) then v266=v99[2];do return v13(v97,v266,v85);end break;end end break;end end else do return;end end elseif ((v100==50) or ((586 + 248)>=((20218 -12643) -3212))) then local v267=0 + 0 ;local v268;local v269;local v270;while true do if ((((7916 -4383) + 1096)>=(6337 -3522)) and (v267==1)) then v270=nil;while true do if ((v268==1) or ((2630 -(465 + (2042 -(396 + 698))))==(1927 -1473))) then for v375=1361 -(1347 + 13) , #v96 do local v376=0;local v377;local v378;while true do if ((4339>=2117) and (v376==0)) then local v414=1125 -(388 + 737) ;while true do if ((v414==((477 -(258 + 148)) -(67 + 3))) or (1665<=(1148 + 346))) then v376=3 -(851 -(302 + 547)) ;break;end if (((42 -(1483 -(446 + 1006)))<=(93 + 416)) and (v414==0)) then v377=(0 -0) -0 ;v378=nil;v414=2 -1 ;end end end if ((1==v376) or ((12902 -9361)<(3988 -2487))) then while true do if (((3590 -(727 + 65))<(3745 -(81 + 105))) and ((0 + 0)==v377)) then v378=v96[v375];for v447=0 + 0 , #v378 do local v448=1102 -(197 + 905) ;local v449;local v450;local v451;local v452;while true do if ((v448==(1 + 0)) or ((11848 -8199)>=(492 + 3501))) then v451=nil;v452=nil;v448=6 -4 ;end if ((v448==(1 + 1)) or ((10639 -6438)<=(976 + 1380))) then while true do if ((v449==(1820 -(946 + 874))) or (3727<(41 + 343))) then local v470=0 + 0 ;while true do if (((11774 -8776)<=(901 + 3445)) and ((3 -2)==v470)) then v449=673 -(440 + 232) ;break;end if (((2622 + 2028)==(5147 -(226 + 271))) and (v470==((15 -(4 + 11)) -0))) then v450=v378[v447];v451=v450[3 -2 ];v470=2 -1 ;end end end if ((581<3380) and (v449==(1 + 0))) then v452=v450[1929 -(499 + (3219 -(1511 + 280))) ];if (((v451==v97) and (v452>=v269)) or ((530 + 1786)<303)) then local v473=0 -0 ;local v474;while true do if (((2547 + 1554)>(2001 -1157)) and (v473==((335 -167) -(126 + 42)))) then v474=253 -(147 + 106) ;while true do if ((2712>(591 + 744)) and (0==v474)) then v270[v452]=v451[v452];v450[1 + 0 ]=v270;break;end end break;end end end break;end end break;end if ((v448==0) or (((2892 -1048) + 2700)<=(108 + 2594))) then v449=(0 + 0) -0 ;v450=nil;v448=2 -1 ;end end end break;end end break;end end end break;end if ((v268==(0 + 0)) or ((813 -(60 + 331))==(4588 -2915))) then local v359=782 -(745 + 37) ;while true do if ((((2103 -(34 + 1826)) -(127 + 115))==v359) or ((296 + 2150)==((5972 -1873) + 115))) then v268=1;break;end if ((v359==(0 + 0)) or (((4485 -(185 + 189)) + 357)<=1933)) then local v403=259 -(49 + 210) ;while true do if ((v403==0) or ((1577 + (3412 -2161))<167)) then v269=v99[1027 -((1050 -(69 + 10)) + 54) ];v270={};v403=1 + 0 ;end if ((v403==(2 -1)) or (821>1572)) then v359=1;break;end end end end end end break;end if ((v267==(0 -0)) or ((4037 -(1136 + 529))>=3152)) then local v306=0 + 0 ;while true do if ((v306==(1006 -(13 + 992))) or ((1993 + 2269)<(3926 -2783))) then v267=1 + (0 -0) ;break;end if ((((0 + 0) -0)==v306) or (3407>4944)) then v268=0;v269=nil;v306=85 -(13 + (284 -213)) ;end end end end else v97[v99[3 -1 ]]=v97[v99[3 + 0 ]] * v97[v99[(173 + 799) -((2429 -1574) + 92 + 21) ]] ;end v84=v84 + ((5 -2) -2) ;break;end end break;end end break;end if (((1263 + 2585)>((2798 -1641) -(429 + 491))) and (v104==(0 + 0 + 0))) then v105=(0 + 0) -0 ;v106=nil;v104=842 -(646 + 195) ;end end end end v83=3;end end end;end if (v66==0) then v67=v63[1];v68=v63[2];v66=1;end end end return v30(v29(),{},v17)(...);end end end vv9(),...);end
